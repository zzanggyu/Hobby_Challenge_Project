<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
         "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hobby.challenge.fobackend.mapper.AuthMapper">

	<!-- 회원 등록 -->
	<insert id="insertUser" 
	parameterType="com.hobby.challenge.fobackend.entity.User" 
	useGeneratedKeys="true" 
	keyProperty="userId">
	 <!-- 사용자 테이블 -->
	  INSERT INTO USER (
	  		 LOGIN_ID <!-- 로그인 아이디 컬럼-->
		   , USERNAME <!-- 사용자 이름 컬럼-->
		   , PASSWORD <!-- 사용자 비밀번호 컬럼-->
		   , EMAIL <!-- 이메일 컬럼-->
		   , NICKNAME <!-- 닉네임(별명) 컬럼-->
		   , BIRTH_DATE <!-- 생년월일 컬럼-->
		   )
	  		 VALUES (
	  		 #{loginId} 
	  	   , #{username} 
	  	   , #{password} 
	  	   , #{email} 
	  	   , #{nickname}
	  	   , #{birthDate}
		   )		
	</insert>
	
	<!--  로그인 시 사용자 조회 비밀번호 -->
	<select id="findByLoginId" resultType="com.hobby.challenge.fobackend.entity.User">
		SELECT USER_ID AS userId
			 , LOGIN_ID AS loginId <!-- 로그인 아이디 컬럼 -->
			 , USERNAME AS username <!-- 이름(본명) 컬럼 -->
			 , PASSWORD AS password <!-- 비밀번호 컬럼 -->
			 , EMAIL AS email <!-- 이메일 컬럼 -->
			 , NICKNAME AS nickname <!--  닉네임(별명) 컬럼 -->
			 , BIRTH_DATE AS birthDate <!--생년월일 컬럼 -->
			 , ROLE AS role <!-- 역할(member, owner, admin) 컬럼 -->
			 , POINTS AS points <!-- 포인트 컬럼 -->
			 , LEVEL AS level <!-- 레벨 컬럼 -->
			 , CREATED_DATE AS createdDate <!-- 생성일(가입일) 커럼 -->
			 , STATUS AS status
		  FROM USER <!-- 사용자 테이블 -->
		 WHERE LOGIN_ID = #{loginId}
	</select>
	
	<select id="findByEmailAndUsername" resultType="User">
		SELECT USER_ID AS userId
			 , LOGIN_ID AS loginId <!-- 로그인 아이디 컬럼 -->
			 , USERNAME AS username <!-- 이름(본명) 컬럼 -->
			 , PASSWORD AS password <!-- 비밀번호 컬럼 -->
			 , EMAIL AS email <!-- 이메일 컬럼 -->
			 , NICKNAME AS nickname <!--  닉네임(별명) 컬럼 -->
			 , BIRTH_DATE AS birthDate <!--생년월일 컬럼 -->
			 , ROLE AS role <!-- 역할(member, owner, admin) 컬럼 -->
			 , POINTS AS points <!-- 포인트 컬럼 -->
			 , LEVEL AS level <!-- 레벨 컬럼 -->
			 , CREATED_DATE AS createdDate <!-- 생성일(가입일) 커럼 --> 
		  FROM USER <!-- 사용자 테이블 -->
		 WHERE EMAIL = #{email} AND USERNAME = #{username}
	</select>
	
	<!-- 이메일 중복 체크 -->
	<select id="findByEmail" resultType="com.hobby.challenge.fobackend.entity.User">
		SELECT USER_ID AS userId
			 , LOGIN_ID AS loginId<!-- 로그인 아이디 컬럼 -->
			 , USERNAME AS username<!-- 이름(본명) 컬럼 -->
			 , PASSWORD AS password<!-- 비밀번호 컬럼 -->
			 , EMAIL AS email<!-- 이메일 컬럼 -->
			 , NICKNAME AS nickname<!--  닉네임(별명) 컬럼 -->
			 , BIRTH_DATE AS birthDate<!--생년월일 컬럼 -->
			 , ROLE AS role<!-- 역할(member, owner, admin) 컬럼 -->
			 , POINTS AS points<!-- 포인트 컬럼 -->
			 , LEVEL AS level<!-- 레벨 컬럼 -->
			 , CREATED_DATE AS createdDate<!-- 생성일(가입일) 커럼 -->
			FROM USER <!-- 사용자 테이블 -->
			WHERE EMAIL = #{email}
	</select>
	
	<!-- 닉네임 중복 체크 -->
	<select id="findByNickname" resultType="com.hobby.challenge.fobackend.entity.User">
	    SELECT USER_ID AS userId
	         , LOGIN_ID AS loginId
	         , USERNAME AS username
	         , PASSWORD AS password
	         , EMAIL AS email
	         , NICKNAME AS nickname
	         , BIRTH_DATE AS birthDate
	         , ROLE AS role
	         , POINTS AS points
	         , LEVEL AS level
	         , CREATED_DATE AS createdDate
	      FROM USER
	     WHERE NICKNAME = #{nickname}
	</select>


	
	  <!-- 5) 비밀번호 재설정용 업데이트 -->
    <update id="updatePassword">
      UPDATE USER
         SET PASSWORD = #{newPassword}
       WHERE LOGIN_ID = #{loginId}
    </update>
</mapper>