spring.application.name=hobby-challenge-fo-backend

# 포트 설정
server.port=8081

# 데이터베이스 연결 설정
spring.datasource.url=jdbc:mysql://localhost:3306/hobbychallenge?serverTimezone=Asia/Seoul
spring.datasource.username=root
spring.datasource.password=rlagusrb456!
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# MyBatis 설정
# mybatis.mapper-locations=classpath:mapper/**/*.xml
mybatis.mapper-locations=classpath*:mapper/*.xml
mybatis.type-aliases-package=com.hobby.challenge.fobackend.entity
# 엔티티 프로퍼티와(카멜케이스) 디비 컬럼(대문자_대문자) 자동 매핑
mybatis.configuration.map-underscore-to-camel-case=true 
# MyBatis XML 유효성 검증 끄기
#mybatis.configuration.xml-validation=false
# MyBatis 전체 설정 파일 경로

# 타입 핸들러 읽기
#mybatis.config-location=classpath:mybatis-config.xml


# 메일 smtp 설정 구글 지메일
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=khgg1001@gmail.com
spring.mail.password=vzqj eadg ryhn yyzn
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Redis 설정
spring.redis.host=localhost
spring.redis.port=6379
# 비밀번호 없으면 생략
# spring.redis.password=
# (선택) Spring Session 을 Redis에 저장하려면
# spring.session.store-type=redis

# JWT 설정
# 아주_길고_안전한_비밀키를_Base64로_인코딩한_값 환경변수로 관리
jwt.secret=${JWT_SECRET} 
# 엑세스 토큰 만료 시간1시간 (밀리초 단위) 60분 * 60초 * 1000ms
jwt.expiration=3600000   
# 리프레시 토큰 만료 시간 7일
jwt.refreshExpiration=604800000   

# AWS S3 설정
# S3 버킷 이름
aws.s3.bucket-name=hobbychallenge
# 버킷이 생성된 리전 (ex: ap-northeast-2)
aws.s3.region=ap-northeast-2

# AWS 자격 증명 (운영 코드는 IAM Role / 환경변수 사용을 권장)
aws.s3.credentials.access-key=${AWS_ACCESS_KEY_ID}
aws.s3.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}

# 최대 5MB 파일크기 설정 넘으면 MaxUploadSizeExceededException 던짐
# 파일 업로드 설정
file.upload-dir=./uploads
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

# 로깅
logging.level.com.hobby.challenge.fobackend=DEBUG

# 타임존 설정
spring.jackson.time-zone=Asia/Seoul


